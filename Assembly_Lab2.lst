Microsoft (R) Macro Assembler Version 14.27.29112.0	    10/29/20 23:25:43
main.asm						     Page 1 - 1


				.386
				.model flat

 00000000			.code

 00000000			@FUNC@20 proc
 00000000  55				push ebp ;сохраняем ebp при вызове
 00000001  8B EC			mov ebp, esp ;устанавливаем новое значение ebp

					;длина второй строки должна быть больше длины первой строки
 00000003  3B D1			cmp edx, ecx
 00000005  72 32			jb error

					; длина второй строки
 00000007  8B DA			mov ebx, edx
					

					
 00000009  8B 7D 08			mov edi, [ebp]+8	;первая строка
 0000000C  8B 75 0C			mov esi, [ebp]+12	;вторая строка
					
 0000000F			FindSymbol: ;ищем символ

 0000000F  B8 00000000			mov eax, 0
 00000014  8A 07			mov al,[edi]	;берем символ первой строки 
 00000016  8A 26			mov ah, [esi]	;берем символ второй строки
 00000018  3A C4			cmp al, ah	;сравниваем два символа
 0000001A  74 07			je found	;если символы равны, то переходим в found
 0000001C  46				inc esi		; переходим на следующий символ второй строки
 0000001D  4B				dec ebx		;уменьшаем кол-во символов первой строки
 0000001E  83 FB 00			cmp ebx, 0	;проверяем закончились ли символы
 00000021  77 EC			ja FindSymbol	;если символы еще есть, переходим к ним

					;если символы во второй строке закончились, и символ не нашелся записываем его индекс в первую строку на его место
					;тут записать индекс в строку
					;mov eax, [ebp]+16
					;mov [edi],eax
 00000023			found:
 00000023  47				inc edi ;переходим на следующий символ первой строки
 00000024  8B 75 0C			mov esi, [ebp]+12	;возвращаем в регистр esi вторую строку, чтобы снова обработать ее в сравнении с другим символом
 00000027  8B DA			mov ebx, edx	;возвращаем в переменную slenght максимальное кол-во символов второй строки	
 00000029  40				inc eax
 0000002A  89 45 10			mov [ebp]+16,eax
 0000002D  49				dec ecx		;уменьшаем кол-во символов первой строки
 0000002E  83 F9 00			cmp ecx, 0	;проверяем закончились ли символы
 00000031  77 DC			ja FindSymbol	;если не закончились, переходим к дальнейшему анализу

					; выход когда все закончили
 00000033  5D				pop ebp
 00000034  8B C7			mov eax, edi
 00000036  C2 000C			ret 12



 00000039				error:
 00000039  5D					pop ebp
 0000003A  B8 FFFFFFFF				mov eax, -1
 0000003F  C2 000C				ret 12
 00000042			@FUNC@20 endp
				end
Microsoft (R) Macro Assembler Version 14.27.29112.0	    10/29/20 23:25:43
main.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000042 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

@FUNC@20 . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000042 Public
  FindSymbol . . . . . . . . . .	L Near	 0000000F _TEXT	
  found  . . . . . . . . . . . .	L Near	 00000023 _TEXT	
  error  . . . . . . . . . . . .	L Near	 00000039 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors
