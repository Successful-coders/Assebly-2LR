Microsoft (R) Macro Assembler Version 14.27.29112.0	    10/30/20 11:24:14
main.asm						     Page 1 - 1


				.386
				.model flat

 00000000			.code

 00000000			@FUNC@20 proc
 00000000  55				push ebp ;сохраняем ebp при вызове
 00000001  8B EC			mov ebp, esp ;устанавливаем новое значение ebp

 00000003  83 F9 00			cmp ecx, 0
 00000006  74 44			je error

 00000008  83 FA 00			cmp edx, 0
 0000000B  74 3F			je error

					; длина второй строки
 0000000D  8B DA			mov ebx, edx

 0000000F  8B 7D 08			mov edi, [ebp]+8	;первая строка
 00000012  8B 75 0C			mov esi, [ebp]+12	;вторая строка
					
 00000015			FindSymbol: ;ищем символ

 00000015  B8 00000000			mov eax, 0
 0000001A  8A 07			mov al,[edi]	;берем символ первой строки 
 0000001C  8A 26			mov ah, [esi]	;берем символ второй строки
 0000001E  3A C4			cmp al, ah	;сравниваем два символа
 00000020  74 0E			je found	;если символы равны, то переходим в found
 00000022  46				inc esi		; переходим на следующий символ второй строки
 00000023  4B				dec ebx		;уменьшаем кол-во символов первой строки
 00000024  83 FB 00			cmp ebx, 0	;проверяем закончились ли символы
 00000027  77 EC			ja FindSymbol	;если символы еще есть, переходим к ним

					;символ из первой строки не нашелся, фиксируем его индекс
 00000029  8B 45 10			mov eax, [ebp]+16
 0000002C  5D				pop ebp
 0000002D  C2 000C			ret 12
 00000030			found:
					;если нашли хотя бы одно вхождение символа, обрабатываем остальные символы дальше
 00000030  47				inc edi ;переходим на следующий символ первой строки
 00000031  8B 75 0C			mov esi, [ebp]+12	;возвращаем в регистр esi вторую строку, чтобы снова обработать ее в сравнении с другим символом
 00000034  8B DA			mov ebx, edx	;возвращаем в переменную slenght максимальное кол-во символов второй строки	
 00000036  8B 45 10			mov eax, [ebp]+16
 00000039  40				inc eax		; увеличиваем индекс первой строки
 0000003A  89 45 10			mov [ebp]+16,eax
 0000003D  49				dec ecx		;уменьшаем кол-во символов первой строки
 0000003E  83 F9 00			cmp ecx, 0	;проверяем закончились ли символы
 00000041  77 D2			ja FindSymbol	;если не закончились, переходим к дальнейшему анализу
				;все символы нашлись
 00000043  5D				pop ebp
 00000044  B8 FFFFFFFF			mov eax, -1
 00000049  C2 000C			ret 12
 0000004C			error:
 0000004C  5D					pop ebp
 0000004D  B8 FFFFFFFE				mov eax, -2
 00000052  C2 000C				ret 12
 00000055			@FUNC@20 endp
				end
Microsoft (R) Macro Assembler Version 14.27.29112.0	    10/30/20 11:24:14
main.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000055 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

@FUNC@20 . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000055 Public
  FindSymbol . . . . . . . . . .	L Near	 00000015 _TEXT	
  found  . . . . . . . . . . . .	L Near	 00000030 _TEXT	
  error  . . . . . . . . . . . .	L Near	 0000004C _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors
